2019-09-25: David Anderson
     * dwarf_debuglink.c: Corrected bug in pathjoinl().
     * test_linkedtopath.c: Now fully tests pathjoinl().
2019-09-24: David Anderson
     * dwarf_debuglink.h: New enables more test cases
       of the functions in dwarf_debuglink.c
     * src/dwstring.c -> src/dwarfstring.c
     * src/dwstring.h -> src/dwarfstring.h
     * dwarf_debuglink.c: Major revision to use
       dwarfstring.c functions, simplifying the code
       a lot.
     * Makefile.am: New sources and test cases.
     * Makefile.in: Regenerated
     * dwarf_peread.h: Removed one #define
     * dwarf_reading.h: Added error defines (one
       conflicted with dwarf_peread.h)
     * test_dwstring.c: Test code.
     * test_linkedtopath.c: New test code.
2019-09-22: David Anderson
     * dwarf_load_elf_headers.c: Fix issue with 
       the size of a printf variable vs its % format.
     * readelfobj.c: Delete a bogus printf which 
       made tests fail.
     * test_dwstring.c: Make the functions return void
       to avoid warnings.
2019-09-12: David Anderson
     * gbuf.h,gbuf.c,testgbuf.c: New, providing
       an extensible string buffer.
2019-05-27: David Anderson
     * dwarf_elf_naming.c: Had a // C++ comment. Deleted.
     * object_detector_main.c: Was failing to return a value
       from main. Now returns non-zero if any objects
       have real errors.
2019-05-14: David Anderson
     * dwarf_machoread.c: Now we remember both the original
       magic byte content and as-swapped.
     * dwarf_machoread.h:Adding new field swappedmagic.
     * readobjmacho.c: Print the swapped magic.
       That way we can use simple comparisons
       to validate header content in the tests
       directory.
2019-05-14: David Anderson
     * dwarf_pe_descr.h: Remove C++ // comments.
2019-05-13: David Anderson
     * dwarf_load_elf_headers.c(check_size): A useful
       string passed to a checking function was not used to inform
       of the object-file region involved: now it is used.
     * readobjmacho.c,readobjpe.c: In the WORDS_BIGENDIAN
       case a function name was incorrectly spelled: fixed.
2019-05-04: David Anderson
     * dwarf_load_elf_headers.c: Added an additional check
       for corrupted elf section strings.
2019-04-25: David Anderson
     * dwarf_peread.c, dwarf_pe_descr.h: Added a trailing
       _dw to all Windows struct names to assure there
       is no name conflict with Windows possible.
2019-04-24: David Anderson
     * dwarf_peread.c: Improved an strncopy
       to make it clearer and avoid a compiler warning.
       Also, the year was wrong on nearly all the 
       date lines in this ChangeLog: so 2010 -> 2019.
2019-04-24: David Anderson
     * Makefile.am: Added errormessages.c three places.
     * dwarf_elf_naming.c: Added PT_PAX_FLAGS.
     * dwarf_load_elf_headers.c: Improved some error/warning
       messages and added new correctness checks of
       the elf section headers and program headers.
       Corrected mistakes in validate_links().
       Fixed indent issues.
     * dwarf_machoread.h: Deleted meaningless local
       declaration of cur_read_loc(), a function that
       does not exist.
     * dwarf_object_read_common.c: Added error mesages
       for each of the error cases.
     * dwarf_peread.c:  Added error mesages
       for each of the error cases.
     * dwarfmessages.c: Make error reporting from
       here much easier to understand, having
       text for the error numbers.
     * dwarf_reading.h: declaration of dwarf_get_errname()
       to turn local error numbers into a name.
     * readelfobj.c: Revamp so we read the relevant sections
       first, then print. That improves the correctness checking.
       In case of errors we print a basic header set.
     * readelfobj.h: Add PT_ defines we failed to
       pick up earlier.
     * readobjpe.c: Improved reports of errors.
2019-04-21: David Anderson
     * dwarf_load_elf_headers.c,dwarf_machoread.c: Adding 
       filesize to read-random calls.
     * dwarf_object_detector.c: Adding new error codes and
       updating object_read_random() with filesize argument
       and changing calls to match.
     * dwarf_object_read_common.c: Updating dwarf_object_read_random()
       with filesize argument. 
     * dwarf_object_read_common.h: Updating dwarf_object_read_random()
       with filesize argument. 
     * dwarf_peread.c: Adding filesize argument to 
       dwarf_object_read_random() calls. Updating pe_load_section()
       to properly account for how Windows uses SizeOfRawData
       and VirtualSize.
     * dwarf_reading.h: Added RO_SEEK_OFF_END etc error codes
       for the updated dwarf_object_read_random() function.
       Updated RRMOA macro with a file size argument.
     * readelfobj.c: Add filesize argument to RRMOA uses.
2019-04-21: David Anderson
     * dwarf_peread.c: Tiny change showing how, in pe, to
       get virtual address. Unused here.
     * readobjpe.c: Print ImageBase now. Used for calculation
       of virtual address of a section.
2019-04-19: David Anderson
     * dwarf_elf_naming.c,readelfobj.c: Error lines spelled
       more consistently.
     * dwarf_load_elf_headers.c: Error lines spelled more consistently
       and a more detailed explanation given if offset+length
       exceeds file size.
2019-04-17: David Anderson
     * Makefile.am: Added dwarf_elf_reloc_sparc.{h,c}
     * dw_elfstructs.h: Updated comment.
     * dwarf_elf_reloc_mips.c,dwarf_elf_reloc_mips.h: R_MIPS_GPREL
       now R_MIPS_GPREL16.
     * dwarf_load_elf_headers.c: Get the e_machine field copied
       into f_machine field.  For little-endian MIPS64
       do special processing as the relocation structure is special.
       Relocation records for EM_SPARCV9 are special and are handled now.
     * dwarf_machoread.c,dwarf_machoread.h,
       readobjmacho.c: Rename mo_byteorder 
       to mo_endian for naming consistency.
     * dwarf_peread.c,dwarf_epread.h,readobjpe.c: Rename pe_byteorder 
       to pe_endian for naming consistency.
     * readelfobj.c: Alter types to const char* to avoid warnings.
       Include dwarf_elf_reloc_sparc.h.
       For Sparc get the relocation type names.
       If STT_SECTION symbol type use the section name, there is
       no symbol name. Print the extra little-endian MIPS64
       type2 and type3 fields.
     * readelfobj.h:  Add the defines for the standard STT_*
       Elf symbol types. Add f_machine field. Ensure certain
       char * arguments are now const char * to match readelfobj.c
2019-01-30: David Anderson
     * dwarf_load_elf_headers.c: In case of error now avoids
       a memory leak.
2019-01-29: David Anderson
     * dwarf_object_read_common.c: Remove a trailing space character.
     * dwarf_reading.h: Delete unused macros RR and RRMO.
2019-01-28: David Anderson
     * readelfobj.c: If fopen() fails and errno is set
       report the errno in the failure message.
2019-01-27: David Anderson
     * dwarf_object_read_common.c(dwarf_object_read_random):
       Documented that off_t and ssize_t (though not in
       C90) are in early POSIX (ISO/IEC 9954-1:1990).
2019-01-26: David Anderson
     * dwarf_load_elf_headers.c: Removed unused locals.
     * readelfobj.c: Removed unused locals and now use
       UNUSEDARG in one place to eliminate a compiler warning.
     * dwarf_object_read_common.h,dwarf_object_read_common.c:
       Parts of dwarf_object_read_random() were not
       correctly typed nor were read errors correctly checked for.
       A 2.2GB object file is now properly handled.
2019-01-14: David Anderson
     * dwarf_reading.h: Delete definition of uint64_t as
       that definition is never used.
2019-01-06: David Anderson
     * dwarf_object_detector.c: Remove useless call to stat().
     * readelfobj.c: Added 3 ifdef-defines so elf.h
       need not be present.
2019-01-02  David Anderson
     * dwarf_elf_naming.c,dwarf_load_elf_headers.c,dwarf_machoread.c,
       readelfobj.c,readelfobj.h,readobjmacho.c: All use
       Dwarf_Unsigned for commonality with libdwarf/dwarfdump
       type naming.
2019-01-01  David Anderson
     * dwarf_elf_naming.c,dwarf_load_elf_headers.c,
       readelfobj.c,readelfobj.h: Fix indents, remove
       trailing whitespace.


